pivot_longer(cols=c("1.alpha", "2.alpha", "3.alpha", "4.alpha")) %>%
ggplot() +
geom_density(aes(x=value))
hist(exp(rnorm(5000, mean=0, sd=0.25)))
as.data.frame(results.hetero1$stan_fit1$draws(c("alpha"))) %>%
pivot_longer(cols=c("1.alpha", "2.alpha", "3.alpha", "4.alpha")) %>%
ggplot() +
geom_density(aes(x=value)) +
geom_density(data=data.frame(x=exp(rnorm(5000, mean=0, sd=0.25))), aes(x=x))
as.data.frame(results.hetero1$stan_fit1$draws(c("alpha"))) %>%
pivot_longer(cols=c("1.alpha", "2.alpha", "3.alpha", "4.alpha")) %>%
ggplot() +
geom_density(aes(x=value), color="blue") +
geom_density(data=data.frame(x=exp(rnorm(5000, mean=0, sd=0.25))), aes(x=x), color="red", linestyle="dashed")
as.data.frame(results.hetero1$stan_fit1$draws(c("alpha"))) %>%
pivot_longer(cols=c("1.alpha", "2.alpha", "3.alpha", "4.alpha")) %>%
ggplot() +
geom_density(aes(x=value), color="blue") +
geom_density(data=data.frame(x=exp(rnorm(5000, mean=0, sd=0.25))), aes(x=x), color="red", linetype="dashed")
# Prior vs. posterior of alpha
as.data.frame(results.hetero1$stan_fit4$draws(c("alpha"))) %>%
pivot_longer(cols=c("1.alpha", "2.alpha", "3.alpha", "4.alpha")) %>%
ggplot() +
geom_density(aes(x=value), color="blue") +
geom_density(data=data.frame(x=exp(rnorm(5000, mean=0, sd=0.25))), aes(x=x), color="red", linetype="dashed")
# Prior vs. posterior of alpha
as.data.frame(results.hetero1$stan_fit3$draws(c("alpha"))) %>%
pivot_longer(cols=c("1.alpha", "2.alpha", "3.alpha", "4.alpha")) %>%
ggplot() +
geom_density(aes(x=value), color="blue") +
geom_density(data=data.frame(x=exp(rnorm(5000, mean=0, sd=0.25))), aes(x=x), color="red", linetype="dashed")
# Prior vs. posterior of alpha
as.data.frame(results.hetero1$stan_fit3$draws(c("alpha"))) %>%
pivot_longer(cols=c("1.alpha", "2.alpha", "3.alpha", "4.alpha")) %>%
ggplot() +
geom_density(aes(x=value), color="blue") +
geom_density(data=data.frame(x=exp(rnorm(5000, mean=-1, sd=0.25))), aes(x=x), color="red", linetype="dashed")
# Prior vs. posterior of alpha
as.data.frame(results.hetero1$stan_fit3$draws(c("alpha"))) %>%
pivot_longer(cols=c("1.alpha", "2.alpha", "3.alpha", "4.alpha")) %>%
ggplot() +
geom_density(aes(x=value), color="blue") +
geom_density(data=data.frame(x=exp(rnorm(5000, mean=-1, sd=0.5))), aes(x=x), color="red", linetype="dashed")
# Prior vs. posterior of alpha
as.data.frame(results.hetero1$stan_fit3$draws(c("alpha"))) %>%
pivot_longer(cols=c("1.alpha", "2.alpha", "3.alpha", "4.alpha")) %>%
ggplot() +
geom_density(aes(x=value), color="blue") +
geom_density(data=data.frame(x=exp(rnorm(5000, mean=-1, sd=1))), aes(x=x), color="red", linetype="dashed")
# Prior vs. posterior of alpha
as.data.frame(results.hetero1$stan_fit3$draws(c("alpha"))) %>%
pivot_longer(cols=c("1.alpha", "2.alpha", "3.alpha", "4.alpha")) %>%
ggplot() +
geom_density(aes(x=value), color="blue") +
geom_density(data=data.frame(x=exp(rnorm(5000, mean=0, sd=0.25))), aes(x=x), color="red", linetype="dashed")
# Prior vs. posterior of alpha
as.data.frame(results.hetero1$stan_fit4$draws(c("alpha"))) %>%
pivot_longer(cols=c("1.alpha", "2.alpha", "3.alpha", "4.alpha")) %>%
ggplot() +
geom_density(aes(x=value), color="blue") +
geom_density(data=data.frame(x=exp(rnorm(5000, mean=0, sd=0.25))), aes(x=x), color="red", linetype="dashed")
thing <- function(x, R, r) {}
thing <- function(x, R, r) { sqrt(x**2 + R**2) * sqrt(x**2 + r**2)}
thing(10, 0.1, 0.05)
thing(10, 5, 1)
thing(10, 1, 0.5)
results.hetero1$stan_fit4$cmdstan_diagnose()
# Diagnostics for divergences
plot.chain.diagnostics.grid(results.hetero1, "stan_fit1", lambda_ones, title="Simulated dataset 1; Original Stan")
# Trace plot for LCMCR
plot.diagnostics.R <- function(results, varname, max_ix=4) {
results.matrix <- results$R_sampler$Get_Trace(varname)
varnames <- c()
for (i in 1:dim(results.matrix)[2]) {
varnames <- c(varnames, paste(varname, i, sep=""))
}
results.df <- results.matrix %>%
as_tibble(.name_repair="unique") %>%
setNames(varnames)
results.df[varnames[1:max_ix]] %>%
mutate(iteration=row_number())  %>%
pivot_longer(c(!!varnames[1:max_ix])) %>%
ggplot() +
geom_point(aes(x=iteration,y=value, alpha=0.1, size=0.3)) +
facet_wrap(~ name, ncol = 1)
}
# Trace plot for Stan
plot.chain.diagnostics.grid <- function(results, stan_fit, varnames, title="") {
data <- as.data.frame.table(results[[stan_fit]]$draws()) %>%
filter(variable %in% c(varnames) & chain %in% c(1, 2, 3, 4)) %>%
mutate(iteration = as.numeric(iteration),
Freq = as.numeric(Freq),
chain = recode_factor(chain, `1`="Chain 1",`2`="Chain 2",`3`="Chain 3", `4`="Chain 4"))
ggplot(data) +
geom_point(aes(x=iteration,y=Freq), alpha=0.3) +
facet_grid(variable ~ chain) +
labs(x="Iteration", y="Value", title=title)
}
plot.divergent.transitions <- function(stan_fit, chain, varname) {
values = stan_fit$draws()[,chain,varname]
div.df <- data.frame(divergent=as.vector(stan_fit$sampler_diagnostics()[,chain,"divergent__"])) %>%
mutate("{varname}":=as.vector(stan_fit$draws()[,chain,varname]),
iteration=row_number(),
divergent=recode_factor(as.factor(divergent), `0`="No", `1`="Yes"))
plot.dens <- ggplot(div.df) +
geom_density(aes(x=!!sym(varname), color=divergent, group=divergent, linetype=divergent), alpha=0.5) +
theme(legend.position="bottom")
plot.trace <- ggplot(div.df) +
geom_point(aes(x=iteration, y=!!sym(varname), color=divergent, shape=divergent), alpha=0.5) +
theme(legend.position="bottom")
plot.dens / plot.trace
}
plot.divergent.transitions.pair <- function(stan_fit, chain_num, var1, var2) {
divergences <- as.vector(stan_fit$sampler_diagnostics()[,chain_num,"divergent__"])
as.data.frame.table(stan_fit$draws()) %>%
filter(chain == chain_num & variable %in% c(var1, var2)) %>%
pivot_wider(names_from = c(variable), values_from=c(Freq)) %>%
mutate(divergent = as.factor(divergences),
iteration = row_number()) %>%
ggplot() +
geom_point(aes(x=!!sym(var1), y=!!sym(var2), color=divergent), alpha=0.5)
}
pis = c("pi[1]", "pi[2]", "pi[3]", "pi[4]") # Probability of belonging to the first four latent classes
lambda_r1s = c("lambda_ordered_first_row[1]", "lambda_ordered_first_row[2]", "lambda_ordered_first_row[3]", "lambda_ordered_first_row[4]") # Probability of belonging to the first four latent classes
lambda_ones = c("lambda[1,1]", "lambda[2,1]", "lambda[3,1]", "lambda[4,1]") # Probability of being on the first list across the first four latent classes
lambda_T_ones = c("lambda_T[1,1]", "lambda_T[2,1]", "lambda_T[3,1]", "lambda_T[4,1]") # Probability of being on the first list across the first four latent classes
breaks = c("breaks[1]", "breaks[2]", "breaks[3]", "breaks[4]") # Probability of being on the first list across the first four latent classes
# Prior vs. posterior of alpha
as.data.frame(results.hetero1$stan_fit4$draws(c("alpha"))) %>%
pivot_longer(cols=c("1.alpha", "2.alpha", "3.alpha", "4.alpha")) %>%
ggplot() +
geom_density(aes(x=value), color="blue") +
geom_density(data=data.frame(x=exp(rnorm(5000, mean=0, sd=0.25))), aes(x=x), color="red", linetype="dashed")
plot.chain.diagnostics.grid(results.hetero5.high.adapt, "stan_fit4", c("alpha", "breaks[1]", "breaks[2]", "pi[1]", "pi[2]"), title="Simulated dataset 1; Log-normal prior")
plot.chain.diagnostics.grid(results.hetero1, "stan_fit4", c("alpha", "breaks[1]", "breaks[2]", "pi[1]", "pi[2]"), title="Simulated dataset 1; Log-normal prior")
plot.divergent.transitions(results.hetero1$stan_fit4, 4, "breaks[1]")
plot.divergent.transitions(results.hetero1$stan_fit4, 4, "alpha")
plot.divergent.transitions(results.hetero1$stan_fit4, 4, "pi[2]")
# Prior vs. posterior of alpha
as.data.frame(results.hetero1$stan_fit4$draws(c("alpha"))) %>%
pivot_longer(cols=c("1.alpha", "2.alpha", "3.alpha", "4.alpha")) %>%
ggplot() +
geom_density(aes(x=value), color="blue") +
geom_density(data=data.frame(x=exp(rnorm(5000, mean=0, sd=0.25))), aes(x=x), color="red", linetype="dashed")
# Prior vs. posterior of alpha
as.data.frame(results.hetero1$stan_fit4$draws(c("alpha"))) %>%
pivot_longer(cols=c("1.alpha", "2.alpha", "3.alpha", "4.alpha")) %>%
ggplot() +
geom_density(aes(x=value), color="blue") +
geom_density(data=data.frame(x=exp(rnorm(5000, mean=0, sd=0.25))), aes(x=x), color="red", linetype="dashed") +
scale_color_manual(values=list("lognormal(0, 1/4)"="red", "posterior alpha"="blue"))
# Prior vs. posterior of alpha
as.data.frame(results.hetero1$stan_fit4$draws(c("alpha"))) %>%
pivot_longer(cols=c("1.alpha", "2.alpha", "3.alpha", "4.alpha")) %>%
ggplot() +
geom_density(aes(x=value), color="blue") +
geom_density(data=data.frame(x=exp(rnorm(5000, mean=0, sd=0.25))), aes(x=x), color="red", linetype="dashed") +
scale_color_manual(values=list("lognormal(0, 1/4)"="red", "posterior alpha"="blue"), name="lab")
# Prior vs. posterior of alpha
as.data.frame(results.hetero1$stan_fit4$draws(c("alpha"))) %>%
pivot_longer(cols=c("1.alpha", "2.alpha", "3.alpha", "4.alpha")) %>%
ggplot() +
geom_density(aes(x=value), color="blue") +
geom_density(data=data.frame(x=exp(rnorm(5000, mean=0, sd=0.25))), aes(x=x), color="red", linetype="dashed") +
scale_color_discrete(name=NULL)
# Prior vs. posterior of alpha
as.data.frame(results.hetero1$stan_fit4$draws(c("alpha"))) %>%
pivot_longer(cols=c("1.alpha", "2.alpha", "3.alpha", "4.alpha")) %>%
ggplot() +
geom_density(aes(x=value), color="blue") +
geom_density(data=data.frame(x=exp(rnorm(5000, mean=0, sd=0.25))), aes(x=x), color="red", linetype="dashed") +
scale_color_discrete()
# Prior vs. posterior of alpha
as.data.frame(results.hetero1$stan_fit4$draws(c("alpha"))) %>%
pivot_longer(cols=c("1.alpha", "2.alpha", "3.alpha", "4.alpha")) %>%
ggplot() +
geom_density(aes(x=value), color="lognormal(0, 1/4)") +
geom_density(data=data.frame(x=exp(rnorm(5000, mean=0, sd=0.25))), aes(x=x), color="posterior alpha", linetype="dashed") +
scale_color_manual(values=list("lognormal(0, 1/4)"="red", "posterior alpha"="blue"), name="lab")
# Prior vs. posterior of alpha
as.data.frame(results.hetero1$stan_fit4$draws(c("alpha"))) %>%
pivot_longer(cols=c("1.alpha", "2.alpha", "3.alpha", "4.alpha")) %>%
ggplot() +
geom_density(aes(x=value), color="prior alpha") +
geom_density(data=data.frame(x=exp(rnorm(5000, mean=0, sd=0.25))), aes(x=x), color="posterior alpha", linetype="dashed") +
scale_color_manual(values=list("prior alpha"="red", "posterior alpha"="blue"), name="lab")
# Prior vs. posterior of alpha
as.data.frame(results.hetero1$stan_fit4$draws(c("alpha"))) %>%
pivot_longer(cols=c("1.alpha", "2.alpha", "3.alpha", "4.alpha")) %>%
ggplot() +
geom_density(aes(x=value), color="blue") +
geom_density(data=data.frame(x=exp(rnorm(5000, mean=0, sd=0.25))), aes(x=x), color="red", linetype="dashed") +
labs(color="the legend") +
scale_color_manual(values=list("lognormal(0, 1/4)"="red", "posterior alpha"="blue"), name="lab")
# Prior vs. posterior of alpha
as.data.frame(results.hetero1$stan_fit4$draws(c("alpha"))) %>%
pivot_longer(cols=c("1.alpha", "2.alpha", "3.alpha", "4.alpha")) %>%
ggplot() +
geom_density(aes(x=value), color="posterior alpha") +
geom_density(data=data.frame(x=exp(rnorm(5000, mean=0, sd=0.25))), aes(x=x), color="red", linetype="dashed") +
labs(color="the legend") +
scale_color_manual(values=list("lognormal(0, 1/4)"="red", "posterior alpha"="blue"), name="lab")
# Prior vs. posterior of alpha
as.data.frame(results.hetero1$stan_fit4$draws(c("alpha"))) %>%
pivot_longer(cols=c("1.alpha", "2.alpha", "3.alpha", "4.alpha")) %>%
ggplot() +
geom_density(aes(x=value), color="posterior") +
geom_density(data=data.frame(x=exp(rnorm(5000, mean=0, sd=0.25))), aes(x=x), color="red", linetype="dashed") +
labs(color="the legend") +
scale_color_manual(values=list("lognormal(0, 1/4)"="red", "posterior alpha"="blue"), name="lab")
# Prior vs. posterior of alpha
as.data.frame(results.hetero1$stan_fit4$draws(c("alpha"))) %>%
pivot_longer(cols=c("1.alpha", "2.alpha", "3.alpha", "4.alpha")) %>%
ggplot() +
geom_density(aes(x=value, color="prior alpha")) +
geom_density(data=data.frame(x=exp(rnorm(5000, mean=0, sd=0.25))), aes(x=x, color="posterior alpha", linetype="posterior alpha")) +
scale_color_manual(values=list("lognormal(0, 1/4)"="red", "posterior alpha"="blue"), name="lab")
# Prior vs. posterior of alpha
as.data.frame(results.hetero1$stan_fit4$draws(c("alpha"))) %>%
pivot_longer(cols=c("1.alpha", "2.alpha", "3.alpha", "4.alpha")) %>%
ggplot() +
geom_density(aes(x=value, color="prior alpha")) +
geom_density(data=data.frame(x=exp(rnorm(5000, mean=0, sd=0.25))), aes(x=x, color="posterior alpha", linetype="posterior alpha")) +
scale_color_manual(values=list("prior alpha"="red", "posterior alpha"="blue"), name="lab")
# Prior vs. posterior of alpha
as.data.frame(results.hetero1$stan_fit4$draws(c("alpha"))) %>%
pivot_longer(cols=c("1.alpha", "2.alpha", "3.alpha", "4.alpha")) %>%
ggplot() +
geom_density(aes(x=value, color="prior alpha")) +
geom_density(data=data.frame(x=exp(rnorm(5000, mean=0, sd=0.25))), aes(x=x, color="posterior alpha", linetype="posterior alpha")) +
labs(color="the legend") +
scale_color_manual(values=list("prior alpha"="red", "posterior alpha"="blue"), name="lab")
# Prior vs. posterior of alpha
as.data.frame(results.hetero1$stan_fit4$draws(c("alpha"))) %>%
pivot_longer(cols=c("1.alpha", "2.alpha", "3.alpha", "4.alpha")) %>%
ggplot() +
geom_density(aes(x=value, color="prior alpha")) +
geom_density(data=data.frame(x=exp(rnorm(5000, mean=0, sd=0.25))), aes(x=x, color="posterior alpha", linetype="posterior alpha")) +
labs(color="the legend") +
scale_color_manual(values=c("prior alpha"="red", "posterior alpha"="blue"), name="lab")
# Prior vs. posterior of alpha
as.data.frame(results.hetero1$stan_fit4$draws(c("alpha"))) %>%
pivot_longer(cols=c("1.alpha", "2.alpha", "3.alpha", "4.alpha")) %>%
ggplot() +
geom_density(aes(x=value, color="prior alpha", linetype="prior alpha")) +
geom_density(data=data.frame(x=exp(rnorm(5000, mean=0, sd=0.25))), aes(x=x, color="posterior alpha", linetype="posterior alpha")) +
labs(color="the legend") +
scale_color_manual(values=c("prior alpha"="red", "posterior alpha"="blue"), name="lab") +
scale_linestyle_manual(values=c("prior alpha"="solid", "posterior alpha"="dashed"), name="lab")
# Prior vs. posterior of alpha
as.data.frame(results.hetero1$stan_fit4$draws(c("alpha"))) %>%
pivot_longer(cols=c("1.alpha", "2.alpha", "3.alpha", "4.alpha")) %>%
ggplot() +
geom_density(aes(x=value, color="prior alpha", linetype="prior alpha")) +
geom_density(data=data.frame(x=exp(rnorm(5000, mean=0, sd=0.25))), aes(x=x, color="posterior alpha", linetype="posterior alpha")) +
labs(color="the legend") +
scale_color_manual(values=c("prior alpha"="red", "posterior alpha"="blue"), name="lab") +
scale_linetype_manual(values=c("prior alpha"="solid", "posterior alpha"="dashed"), name="lab")
# Prior vs. posterior of alpha
as.data.frame(results.hetero1$stan_fit4$draws(c("alpha"))) %>%
pivot_longer(cols=c("1.alpha", "2.alpha", "3.alpha", "4.alpha")) %>%
ggplot() +
geom_density(aes(x=value, color="prior alpha", linetype="prior alpha")) +
geom_density(data=data.frame(x=exp(rnorm(5000, mean=0, sd=0.25))), aes(x=x, color="posterior alpha", linetype="posterior alpha")) +
scale_color_manual(values=c("prior alpha"="red", "posterior alpha"="blue"), name="lab") +
scale_linetype_manual(values=c("prior alpha"="solid", "posterior alpha"="dashed"), name="lab")
# Prior vs. posterior of alpha
as.data.frame(results.hetero1$stan_fit4$draws(c("alpha"))) %>%
pivot_longer(cols=c("1.alpha", "2.alpha", "3.alpha", "4.alpha")) %>%
ggplot() +
geom_density(aes(x=value, color="prior alpha", linetype="prior alpha")) +
geom_density(data=data.frame(x=exp(rnorm(5000, mean=0, sd=0.25))), aes(x=x, color="posterior alpha", linetype="posterior alpha")) +
scale_color_manual(values=c("prior alpha"="red", "posterior alpha"="blue")) +
scale_linetype_manual(values=c("prior alpha"="solid", "posterior alpha"="dashed"))
# Prior vs. posterior of alpha
as.data.frame(results.hetero1$stan_fit4$draws(c("alpha"))) %>%
pivot_longer(cols=c("1.alpha", "2.alpha", "3.alpha", "4.alpha")) %>%
ggplot() +
geom_density(aes(x=value, color="prior alpha", linetype="prior alpha")) +
geom_density(data=data.frame(x=exp(rnorm(5000, mean=0, sd=0.25))), aes(x=x, color="posterior alpha", linetype="posterior alpha")) +
scale_color_manual(values=c("prior alpha"="red", "posterior alpha"="blue"), name="") +
scale_linetype_manual(values=c("prior alpha"="solid", "posterior alpha"="dashed"), name="")
# Prior vs. posterior of alpha
as.data.frame(results.hetero1$stan_fit4$draws(c("alpha"))) %>%
pivot_longer(cols=c("1.alpha", "2.alpha", "3.alpha", "4.alpha")) %>%
ggplot() +
geom_density(aes(x=value, color="prior alpha", linetype="prior alpha")) +
geom_density(data=data.frame(x=exp(rnorm(5000, mean=0, sd=0.25))), aes(x=x, color="posterior alpha", linetype="posterior alpha")) +
scale_color_manual(values=c("prior alpha"="red", "posterior alpha"="blue"), name="") +
scale_linetype_manual(values=c("prior alpha"="solid", "posterior alpha"="dashed"), name="") +
theme(legend.position = "bottom")
# Prior vs. posterior of alpha
as.data.frame(results.hetero1$stan_fit4$draws(c("alpha"))) %>%
pivot_longer(cols=c("1.alpha", "2.alpha", "3.alpha", "4.alpha")) %>%
ggplot() +
geom_density(aes(x=value, color="prior alpha", linetype="prior alpha")) +
geom_density(data=data.frame(x=exp(rnorm(5000, mean=0, sd=0.25))), aes(x=x, color="posterior alpha", linetype="posterior alpha")) +
scale_color_manual(values=c("prior alpha"="red", "posterior alpha"="blue"), name="") +
scale_linetype_manual(values=c("prior alpha"="solid", "posterior alpha"="dashed"), name="") +
theme(legend.position = "top right")
# Prior vs. posterior of alpha
as.data.frame(results.hetero1$stan_fit4$draws(c("alpha"))) %>%
pivot_longer(cols=c("1.alpha", "2.alpha", "3.alpha", "4.alpha")) %>%
ggplot() +
geom_density(aes(x=value, color="prior alpha", linetype="prior alpha")) +
geom_density(data=data.frame(x=exp(rnorm(5000, mean=0, sd=0.25))), aes(x=x, color="posterior alpha", linetype="posterior alpha")) +
scale_color_manual(values=c("prior alpha"="red", "posterior alpha"="blue"), name="") +
scale_linetype_manual(values=c("prior alpha"="solid", "posterior alpha"="dashed"), name="") +
theme(legend.position = c(0.9, 0.9))
# Prior vs. posterior of alpha
as.data.frame(results.hetero1$stan_fit4$draws(c("alpha"))) %>%
pivot_longer(cols=c("1.alpha", "2.alpha", "3.alpha", "4.alpha")) %>%
ggplot() +
geom_density(aes(x=value, color="prior alpha", linetype="prior alpha")) +
geom_density(data=data.frame(x=exp(rnorm(5000, mean=0, sd=0.25))), aes(x=x, color="posterior alpha", linetype="posterior alpha")) +
scale_color_manual(values=c("prior alpha"="red", "posterior alpha"="blue"), name="") +
scale_linetype_manual(values=c("prior alpha"="solid", "posterior alpha"="dashed"), name="") +
theme(legend.position = "bottom")
# Prior vs. posterior of alpha
as.data.frame(results.hetero1$stan_fit4$draws(c("alpha"))) %>%
pivot_longer(cols=c("1.alpha", "2.alpha", "3.alpha", "4.alpha")) %>%
ggplot() +
geom_density(aes(x=value, color="prior", linetype="prior")) +
geom_density(data=data.frame(x=exp(rnorm(5000, mean=0, sd=0.25))), aes(x=x, color="posterior", linetype="posterior")) +
scale_color_manual(values=c("prior"="red", "posterior"="blue"), name="") +
scale_linetype_manual(values=c("prior"="solid", "posterior"="dashed"), name="") +
labs(x="alpha") +
theme(legend.position = "bottom")
# Prior vs. posterior of alpha
as.data.frame(results.hetero1$stan_fit4$draws(c("alpha"))) %>%
pivot_longer(cols=c("1.alpha", "2.alpha", "3.alpha", "4.alpha")) %>%
ggplot() +
geom_density(aes(x=value, color="prior", linetype="prior")) +
geom_density(data=data.frame(x=exp(rnorm(5000, mean=0, sd=0.25))), aes(x=x, color="posterior", linetype="posterior")) +
scale_color_manual(values=c("prior"="blue", "posterior"="red"), name="") +
scale_linetype_manual(values=c("prior"="solid", "posterior"="dashed"), name="") +
labs(x="alpha") +
theme(legend.position = "bottom")
# Prior vs. posterior of alpha
as.data.frame(results.hetero1$stan_fit4$draws(c("alpha"))) %>%
pivot_longer(cols=c("1.alpha", "2.alpha", "3.alpha", "4.alpha")) %>%
ggplot() +
geom_density(aes(x=value, color="posterior", linetype="posterior")) +
geom_density(data=data.frame(x=exp(rnorm(5000, mean=0, sd=0.25))), aes(x=x, color="prior", linetype="prior")) +
scale_color_manual(values=c("prior"="red", "posterior"="blue"), name="") +
scale_linetype_manual(values=c("prior"="solid", "posterior"="dashed"), name="") +
labs(x="alpha") +
theme(legend.position = "bottom")
ggsave("../output/alpha_prior_posterior.png", width=4, height=4)
stan_data
install.packages("extraDistr")
library(extraDistr)
kumar.samp <- rkumar(1000, 2, 3)
kumar.samp**2
hist(kumar.samp**2)
beta.samp <- rbeta(1000, 1, 3)
hist(beta.samp)
ks.test(kumar.samp**2, beta.samp)
kumar.samp <- rkumar(1000, 2, 3)
kumar.samp2 <- rkumar(1000, 2, 3)
ks.test(kumar.samp*kumar.samp2, beta.samp)
hist(kumar.samp*kumar.samp2)
kumar.samp3 <- rkumar(1000, 2, 3)
hist(kumar.samp*kumar.samp2*kumar.samp3)
ks.test(kumar.samp*kumar.samp2*kumar.samp3, beta.samp)
beta.samp <- rbeta(1000, 2, 1)
hist(beta.samp)
exp.samp <- rexp(1000, rate=2)
hist(exp.samp)
hist(-log(beta.samp))
hist(exp.samp)
ks.test(-log(beta.samp), exp.samp)
beta.samp <- rbeta(1000, 1/2, 1)
hist(beta.samp)
exp.samp <- rexp(1000, rate=1/2)
ks.test(-log(beta.samp), exp.samp)
hist(-log(beta.samp))
rgamma(5, 1)
hist(exp(rgamma(1000, 5, 1)))
hist(exp(-rgamma(1000, 5, 1)))
hist(exp(-rgamma(1000, 5, 10)))
hist(exp(-rgamma(1000, 5, 7)))
hist(exp(-rgamma(1000, 5, 5)))
hist(exp(-rgamma(1000, 5, 4)))
hist(rexp(1000, 4)*rexp(1000, 4)*rexp(1000, 4)*rexp(1000, 4)*rexp(1000, 4))
hist(rbeta(1000, 4, 1)*rbeta(1000, 4, 1)*rbeta(1000, 4, 1)*rbeta(1000, 4, 1)*rbeta(1000, 4, 1))
ks.test(exp(-rgamma(1000, 5, 1), (rbeta(1000, 4, 1)*rbeta(1000, 4, 1)*rbeta(1000, 4, 1)*rbeta(1000, 4, 1)*rbeta(1000, 4, 1)))
)
ks.test(exp(-rgamma(1000, 5, 1)), (rbeta(1000, 4, 1)*rbeta(1000, 4, 1)*rbeta(1000, 4, 1)*rbeta(1000, 4, 1)*rbeta(1000, 4, 1)))
ks.test(exp(-rgamma(1000, 5, 4)), (rbeta(1000, 4, 1)*rbeta(1000, 4, 1)*rbeta(1000, 4, 1)*rbeta(1000, 4, 1)*rbeta(1000, 4, 1)))
mean(exp(-rgamma(1000, 5, 4)))
mean(1/(1-exp(-rgamma(1000, 5, 4))))
log(1 - 1/10)/10
scale = log(1 - 1/10)/10
mean(1/(1-exp(-rgamma(1000, 10, scale))))
scale = -log(1 - 1/10)/10
mean(1/(1-exp(-rgamma(1000, 10, scale))))
scale
rgamma(1000, 10, scale)
log(1 - 1/10)/10
ys = -rgamma(1000, 5, 4))
ys = -rgamma(1000, 5, 4)
means(ys)
mean(ys)
ys
hist(ys)
mean(-ys)
5/4
log(1-1/1.25)/5
1/(1 - exp(5/4))
mean(1/(1 - ys))
mean(1/(1 - exp(ys)))
mean(ys)
1/(1 - exp(-1.25))
?integrate
expectation <- function(x) { 1/(1 - x) * (1 - 1/x)**2 * log(1-1/x)**4 }
integrate(expectation, 1, 10000)
integrate(expectation, 1, 100)
integrate(expectation, 1, 10)
integrate(expectation, 1, 1000)
2**5 / gamma(5)
2**5 / gamma(5) *( integrate(expectation, 1, 1000)
2**5 / gamma(5) * integrate(expectation, 1, 1000)
2**5 / gamma(5) * integrate(expectation, 1, 1000)
str(integrate(expectation, 1, 1000))
integrate(expectation, 1, 1000)$value
2**5 / gamma(5) * integrate(expectation, 1, 1000)$value
- 2**5 / gamma(5) * integrate(expectation, 1, 1000)$value
k = 5
beta = 1/4
expectation <- function(x) { beta ** k/gamma(k) * 1/(1 - x) * (1 - 1/x)**beta * log(1-1/x)**(k - 1) }
integrate(expectation, 1, 1000)
expectation <- function(x) { 1/(1 - x) * (1 - 1/x)**beta * log(1-1/x)**(k - 1) }
integrate(expectation, 1, 1000)
integrate(expectation, 1, 100)
integrate(expectation, 1, 10)
integrate(expectation, 1, 100)
beta
integrate(expectation, 1, 10)
integrate(expectation, 1, 2)
integrate(expectation, 1, 3)
integrate(expectation, 1, 10000)
beta = 4
expectation <- function(x) { 1/(1 - x) * (1 - 1/x)**beta * log(1-1/x)**(k - 1) }
integrate(expectation, 1, 10000)
integrate(expectation, 1, 1000)
beta**k / gamma(k) * integrate(expectation, 1, 10000)$value
mean(1 / (1 - exp(-ys)))
mean(1 / (1 - exp(ys)))
setwd("~/research/hrdag/lcmcr_stan/2_lcmcr_with_covariates/src/")
pacman::p_load(argparse, here, arrow, dplyr, tidyr, cmdstanr, rstan, posterior, LCMCR, ggplot2, broom, patchwork, scales)
data("kosovo_aggregate")
kosovo <- as_tibble(sapply(kosovo_aggregate, as.numeric) - 1)
# ----- main
# Initialize stan models
stan_model <- cmdstan_model("./LCMCR_no_covariates.stan", pedantic = TRUE)
stan_model_moe <- cmdstan_model("./LCMCR_covariates_mixture_of_experts.stan", pedantic = TRUE)
setwd("~/research/hrdag/lcmcr_stan/1_implement_rlcmcr_in_stan/src/")
set.seed(19481210)
pacman::p_load(argparse, here, arrow, dplyr, tidyr, cmdstanr, rstan, posterior, LCMCR, ggplot2, broom, patchwork, scales)
data("kosovo_aggregate")
kosovo <- as_tibble(sapply(kosovo_aggregate, as.numeric) - 1)
# ----- main
# Initialize stan models
stan_model <- cmdstan_model("./LCMCR.stan", pedantic = TRUE)
?cmdstan_model
stan_model2 <- cmdstan_model("./LCMCR_2.stan", pedantic = TRUE)
stan_model3 <- cmdstan_model("./LCMCR_3.stan", pedantic = TRUE)
stan_model4 <- cmdstan_model("./LCMCR_4.stan", pedantic = TRUE)
stan_model5 <- cmdstan_model("./LCMCR_5_fixed_alpha.stan", pedantic = TRUE)
pacman::p_load(argparse, here, arrow, dplyr, tidyr, cmdstanr, rstan, posterior, LCMCR, ggplot2, broom, patchwork, scales, purrr)
?compact
list(a=1, b=NULL) %>% compact()
simulate_mse_dataset <- function(N, list_capture_probs) {
membership_in_lists <- data.frame(list(V1=as.numeric(runif(N) < list_capture_probs[1]) ))
J <- length(list_capture_probs)
for (j in 2:J) {
membership_in_lists[,j] = as.numeric(runif(N) < list_capture_probs[j])
}
membership_in_lists
}
simulate_mse_dataset(2000 * 0.9, c(0.033, 0.033, 0.099, 0.132, 0.033))
# Simulated example from Manrique-Vallier (2016)
data.sim.hetero1 <- rbind(
simulate_mse_dataset(2000 * 0.9, c(0.033, 0.033, 0.099, 0.132, 0.033)),
simulate_mse_dataset(2000 * 0.1, c(0.660, 0.825, 0.759, 0.990, 0.693))
) %>% filter(rowSums(across(everything())) > 0)
data.sim.hetero1
loadRDS
readRDS("~/research/hrdag/lcmcr_priors/1.1_priors/output/priors_J6_1.rds")
readRDS("~/research/hrdag/lcmcr_priors/1.1_priors/output/priors_J6_2.rds")
readRDS("~/research/hrdag/lcmcr_priors/1.1_priors/output/priors_J6_3.rds")
readRDS("~/research/hrdag/lcmcr_priors/1.1_priors/output/priors_J6_4.rds")
readRDS("~/research/hrdag/lcmcr_priors/1.1_priors/output/priors_J6_5.rds")
readRDS("~/research/hrdag/lcmcr_priors/1.1_priors/output/priors_J6_unif.rds")
readRDS("~/research/hrdag/lcmcr_priors/1.1_priors/output/priors_J7_1.rds")
readRDS("~/research/hrdag/lcmcr_priors/1.1_priors/output/priors_J7_2.rds")
readRDS("~/research/hrdag/lcmcr_priors/1.1_priors/output/priors_J7_3.rds")
readRDS("~/research/hrdag/lcmcr_priors/1.1_priors/output/priors_J7_4.rds")
readRDS("~/research/hrdag/lcmcr_priors/1.1_priors/output/priors_J7_5.rds")
?cmdstan_model
library(pacman)
install.packages("renv")
library(renv)
install.packages("checkpoint")
?install.packages
.libPaths()
.libPaths("/usr/local/Cellar/r/4.2.1_4/lib/library")
.libPaths(c("/usr/local/Cellar/r/4.2.1_4/lib/library"))
install.packages("renv")
.libPaths(c("/usr/local/Cellar/r/4.2.1_4/lib/R/library"))
install.packages("renv")
